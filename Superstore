#This project utilizes the follow Superstore data: 

REATE TABLE superstore (
    item_id INTEGER PRIMARY KEY,
    item_name TEXT,
    category TEXT,
    price DECIMAL(10, 2),
    stock_quantity INTEGER,
    average_rating DECIMAL(3, 2)
);

INSERT INTO superstore (item_id, item_name, category, price, stock_quantity, average_rating)
VALUES
    (1, 'Stainless Steel Cookware Set', 'Kitchen Supplies', 89.99, 50, 4.6),
    (2, 'Memory Foam Mattress', 'Furnishings', 499.99, 30, 4.8),
    (3, 'Smart LED TV', 'Electronics', 549.00, 20, 4.5),
    (4, 'Robot Vacuum Cleaner', 'Appliances', 199.50, 40, 4.3),
    (5, 'Wireless Bluetooth Speaker', 'Electronics', 39.99, 60, 4.2),
    (6, 'Non-Stick Baking Set', 'Kitchen Supplies', 29.95, 80, 4.4),
    (7, 'Cotton Bedding Set', 'Furnishings', 89.00, 25, 4.7),
    (8, 'Smart Home Security Camera', 'Electronics', 79.95, 15, 4.1),
    (9, 'Air Purifier', 'Appliances', 129.50, 35, 4.6),
    (10, 'Premium Coffee Maker', 'Kitchen Supplies', 79.99, 50, 4.9),
    (11, 'Ergonomic Office Chair', 'Furnishings', 189.00, 20, 4.5),
    (12, 'Wireless Earbuds', 'Electronics', 49.99, 75, 4.3),
    (13, 'Slow Cooker', 'Appliances', 49.95, 30, 4.7),
    (14, 'Cutlery Set', 'Kitchen Supplies', 34.50, 40, 4.4),
    (15, 'Cozy Throw Blanket', 'Furnishings', 24.99, 100, 4.2);




#1 Use a SELECT statement to order the items by price.

SELECT item_name, price
FROM superstore 
ORDER BY price; 

#2 Show statistics about the item prices.

SELECT AVG(price) 
FROM superstore; 

SELECT MIN(price) 
FROM superstore; 

SELECT MAX(price) 
FROM superstore; 

SELECT COUNT(item_id) 
FROM superstore; 

#3 Show a statistic about the price for items in the category of "Kitchen Supplies".

SELECT AVG(price) 
FROM superstore 
WHERE category = "Kitchen Supplies"; 

#4 Filter and order by price the items in the category of "Kitchen Supplies".

SELECT item_name, price, stock_quantity 
FROM superstore 
WHERE category = "Kitchen Supplies" 
ORDER BY price;  

#5 Filter and order by price the items that costs more than $100.

SELECT item_name, price, stock_quantity
FROM superstore 
WHERE price > 100
ORDER BY price desc; 

#6 Filter and order by average rating the products that have less than 30 items in stock. 

SELECT item_name, price, stock_quantity, average_rating 
FROM superstore 
WHERE stock_quantity < 30
ORDER BY average_rating; 
